Control Identifiers:

Dialog - 'Конфигуратор АБАК ПЛК'    (L-9, T-9, R1929, B1039)
['Конфигуратор АБАК ПЛК', 'Dialog', 'Конфигуратор АБАК ПЛКDialog']
child_window(title="Конфигуратор АБАК ПЛК", auto_id="window", control_type="Window")
   |
   | TitleBar - ''    (L20, T-6, R1920, B29)
   | ['TitleBar']
   |    |
   |    | Menu - 'Система'    (L0, T0, R28, B28)
   |    | ['Система', 'Menu', 'СистемаMenu', 'Система0', 'Система1', 'Menu0', 'Menu1']
   |    | child_window(title="Система", auto_id="MenuBar", control_type="MenuBar")
   |    |    |
   |    |    | MenuItem - 'Система'    (L0, T0, R28, B28)
   |    |    | ['MenuItem', 'Система2', 'СистемаMenuItem', 'MenuItem0', 'MenuItem1']
   |    |    | child_window(title="Система", control_type="MenuItem")
   |    |
   |    | Button - 'Свернуть'    (L1740, T9, R1800, B28)
   |    | ['СвернутьButton', 'Button', 'Свернуть', 'Button0', 'Button1']
   |    | child_window(title="Свернуть", control_type="Button")
   |    |
   |    | Button - 'Восстановить'    (L1800, T9, R1859, B28)
   |    | ['ВосстановитьButton', 'Button2', 'Восстановить']
   |    | child_window(title="Восстановить", control_type="Button")
   |    |
   |    | Button - 'Закрыть'    (L1859, T9, R1929, B28)
   |    | ['Закрыть', 'ЗакрытьButton', 'Button3']
   |    | child_window(title="Закрыть", control_type="Button")
   |
   | Menu - ''    (L0, T29, R1920, B64)
   | ['Menu2', 'ФайлMenu']
   | child_window(auto_id="menu1", control_type="Menu")
   |    |
   |    | MenuItem - 'Файл'    (L0, T29, R50, B64)
   |    | ['MenuItem2', 'ФайлMenuItem', 'Файл', 'Файл0', 'Файл1']
   |    | child_window(title="Файл", control_type="MenuItem")
   |    |    |
   |    |    | Static - 'Файл'    (L8, T37, R43, B56)
   |    |    | ['Static', 'ФайлStatic', 'Файл2', 'Static0', 'Static1']
   |    |    | child_window(title="Файл", control_type="Text")
   |    |
   |    | MenuItem - 'Учетная запись'    (L50, T29, R170, B64)
   |    | ['MenuItem3', 'Учетная запись', 'Учетная записьMenuItem', 'Учетная запись0', 'Учетная запись1']
   |    | child_window(title="Учетная запись", auto_id="AccountMenu", control_type="MenuItem")
   |    |    |
   |    |    | Static - 'Учетная запись'    (L58, T37, R163, B56)
   |    |    | ['Static2', 'Учетная запись2', 'Учетная записьStatic']
   |    |    | child_window(title="Учетная запись", control_type="Text")
   |    |
   |    | MenuItem - 'Управление'    (L0, T0, R0, B0)
   |    | ['MenuItem4', 'Управление', 'УправлениеMenuItem']
   |    | child_window(title="Управление", auto_id="ManagementMenu", control_type="MenuItem")
   |    |
   |    | MenuItem - 'Контроллер'    (L0, T0, R0, B0)
   |    | ['MenuItem5', 'КонтроллерMenuItem', 'Контроллер']
   |    | child_window(title="Контроллер", control_type="MenuItem")
   |    |
   |    | MenuItem - 'Дополнительно'    (L170, T29, R294, B64)
   |    | ['MenuItem6', 'Дополнительно', 'ДополнительноMenuItem', 'Дополнительно0', 'Дополнительно1']
   |    | child_window(title="Дополнительно", control_type="MenuItem")
   |    |    |
   |    |    | Static - 'Дополнительно'    (L178, T37, R287, B56)
   |    |    | ['Static3', 'Дополнительно2', 'ДополнительноStatic']
   |    |    | child_window(title="Дополнительно", control_type="Text")
   |    |
   |    | MenuItem - 'О программе...'    (L294, T29, R412, B64)
   |    | ['MenuItem7', 'О программе...MenuItem', 'О программе...', 'О программе...0', 'О программе...1']
   |    | child_window(title="О программе...", control_type="MenuItem")
   |    |    |
   |    |    | Static - 'О программе...'    (L302, T37, R404, B56)
   |    |    | ['Static4', 'О программе...Static', 'О программе...2', 'О программе...Static0', 'О программе...Static1']
   |    |    | child_window(title="О программе...", control_type="Text")
   |
   | Toolbar - ''    (L0, T64, R1920, B118)
   | ['О программе...Toolbar', 'ФайлToolbar', 'Toolbar']
   | child_window(auto_id="toolBar1", control_type="ToolBar")
   |    |
   |    | Button - ''    (L1900, T65, R1919, B116)
   |    | ['Button4']
   |    | child_window(auto_id="OverflowButton", control_type="Button")
   |    |
   |    | Thumb - ''    (L0, T64, R13, B116)
   |    | ['Thumb', 'ФайлThumb', 'Thumb0', 'Thumb1']
   |    | child_window(auto_id="ToolBarThumb", control_type="Thumb")
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button5']
   |    | child_window(auto_id="NewToolButton", control_type="Button")
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button6']
   |    | child_window(auto_id="OpenToolButton", control_type="Button")
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button7']
   |    | child_window(auto_id="SaveToolButton", control_type="Button")
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button8']
   |    | child_window(auto_id="SaveAsToolButton", control_type="Button")
   |    |
   |    | Separator - ''    (L0, T0, R0, B0)
   |    | ['Separator', 'Separator0', 'Separator1']
   |    |
   |    | Separator - ''    (L0, T0, R0, B0)
   |    | ['Separator2']
   |    |
   |    | Button - ''    (L13, T66, R60, B114)
   |    | ['ФайлButton', 'Button9', 'ФайлButton0', 'ФайлButton1']
   |    |    |
   |    |    | Image - ''    (L16, T70, R56, B110)
   |    |    | ['ФайлImage', 'Image', 'Image0', 'Image1']
   |    |
   |    | Button - ''    (L60, T66, R108, B114)
   |    | ['Button10', 'Учетная записьButton', 'Учетная записьButton0', 'Учетная записьButton1']
   |    |    |
   |    |    | Image - ''    (L64, T70, R104, B110)
   |    |    | ['Учетная записьImage', 'Image2', 'Учетная записьImage0', 'Учетная записьImage1']
   |    |
   |    | Separator - ''    (L110, T69, R111, B111)
   |    | ['Separator3', 'Учетная записьSeparator', 'Учетная записьSeparator0', 'Учетная записьSeparator1']
   |    |
   |    | Button - ''    (L114, T66, R161, B114)
   |    | ['Button11', 'Учетная записьButton2']
   |    | child_window(auto_id="StopToolButton", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L118, T70, R158, B110)
   |    |    | ['Учетная записьImage2', 'Image3']
   |    |
   |    | Separator - ''    (L164, T69, R165, B111)
   |    | ['Separator4', 'Учетная записьSeparator2']
   |    |
   |    | Button - ''    (L168, T66, R215, B114)
   |    | ['ДополнительноButton', 'Button12', 'ДополнительноButton0', 'ДополнительноButton1']
   |    | child_window(auto_id="DownloadToolButton", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L171, T70, R211, B110)
   |    |    | ['ДополнительноImage', 'Image4', 'ДополнительноImage0', 'ДополнительноImage1']
   |    |
   |    | Button - ''    (L215, T66, R263, B114)
   |    | ['ДополнительноButton2', 'Button13']
   |    | child_window(auto_id="UploadToolButton", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L219, T70, R259, B110)
   |    |    | ['ДополнительноImage2', 'Image5']
   |    |
   |    | Separator - ''    (L0, T0, R0, B0)
   |    | ['Separator5']
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button14']
   |    | child_window(auto_id="NaladchikButton", control_type="Button")
   |    |
   |    | Button - ''    (L0, T0, R0, B0)
   |    | ['Button15']
   |    | child_window(auto_id="DebugButton", control_type="Button")
   |
   | Thumb - ''    (L442, T118, R448, B990)
   | ['Thumb2', 'О программе...Thumb', 'О программе...Thumb0', 'О программе...Thumb1']
   | child_window(auto_id="gridSplitter1", control_type="Thumb")
   |
   | TreeView - ''    (L0, T118, R442, B990)
   | ['Параметры контроллераTreeView', 'TreeView']
   | child_window(auto_id="groupsTreeView", control_type="Tree")
   |    |
   |    | TreeItem - 'AbakConfigurator.CParamsGroup'    (L3, T120, R439, B145)
   |    | ['AbakConfigurator.CParamsGroup', 'AbakConfigurator.CParamsGroupTreeItem', 'TreeItem', 'AbakConfigurator.CParamsGroup0', 'AbakConfigurator.CParamsGroup1', 'AbakConfigurator.CParamsGroupTreeItem0', 'AbakConfigurator.CParamsGroupTreeItem1', 'TreeItem0', 'TreeItem1']
   |    | child_window(title="AbakConfigurator.CParamsGroup", control_type="TreeItem")
   |    |    |
   |    |    | Button - ''    (L4, T123, R24, B143)
   |    |    | ['ФайлButton2', 'Button16']
   |    |    | child_window(auto_id="Expander", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L0, T0, R0, B0)
   |    |    | ['Image6']
   |    |    |
   |    |    | Static - 'Параметры контроллера'    (L30, T123, R202, B143)
   |    |    | ['Параметры контроллера', 'Static5', 'Параметры контроллераStatic', 'Параметры контроллера0', 'Параметры контроллера1', 'Параметры контроллераStatic0', 'Параметры контроллераStatic1']
   |    |    | child_window(title="Параметры контроллера", control_type="Text")
   |    |    |    |
   |    |    |    | Static - 'Параметры контроллера'    (L30, T123, R202, B143)
   |    |    |    | ['Параметры контроллера2', 'Static6', 'Параметры контроллераStatic2']
   |    |    |    | child_window(title="Параметры контроллера", control_type="Text")
   |    |
   |    | TreeItem - 'AbakConfigurator.CParamsGroup'    (L3, T145, R439, B170)
   |    | ['AbakConfigurator.CParamsGroup2', 'AbakConfigurator.CParamsGroupTreeItem2', 'TreeItem2']
   |    | child_window(title="AbakConfigurator.CParamsGroup", control_type="TreeItem")
   |    |    |
   |    |    | Button - ''    (L4, T148, R24, B168)
   |    |    | ['ФайлButton3', 'Button17']
   |    |    | child_window(auto_id="Expander", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L0, T0, R0, B0)
   |    |    | ['Image7']
   |    |    |
   |    |    | Static - 'Параметры партнёра'    (L30, T148, R177, B168)
   |    |    | ['Static7', 'Параметры партнёра', 'Параметры партнёраStatic', 'Параметры партнёра0', 'Параметры партнёра1', 'Параметры партнёраStatic0', 'Параметры партнёраStatic1']
   |    |    | child_window(title="Параметры партнёра", control_type="Text")
   |    |    |    |
   |    |    |    | Static - 'Параметры партнёра'    (L30, T148, R177, B168)
   |    |    |    | ['Static8', 'Параметры партнёра2', 'Параметры партнёраStatic2']
   |    |    |    | child_window(title="Параметры партнёра", control_type="Text")
   |    |
   |    | TreeItem - 'AbakConfigurator.CModulesList'    (L3, T170, R439, B195)
   |    | ['AbakConfigurator.CModulesList', 'AbakConfigurator.CModulesListTreeItem', 'TreeItem3']
   |    | child_window(title="AbakConfigurator.CModulesList", control_type="TreeItem")
   |    |    |
   |    |    | Button - ''    (L4, T173, R24, B193)
   |    |    | ['ФайлButton4', 'Button18']
   |    |    | child_window(auto_id="Expander", control_type="Button")
   |    |    |
   |    |    | Image - ''    (L0, T0, R0, B0)
   |    |    | ['Image8']
   |    |    |
   |    |    | Static - 'Модули (0)'    (L30, T173, R106, B193)
   |    |    | ['Static9', 'Модули (0)', 'Модули (0)Static', 'Модули (0)0', 'Модули (0)1', 'Модули (0)Static0', 'Модули (0)Static1']
   |    |    | child_window(title="Модули (0)", control_type="Text")
   |    |    |    |
   |    |    |    | Static - 'Модули (0)'    (L30, T173, R106, B193)
   |    |    |    | ['Static10', 'Модули (0)2', 'Модули (0)Static2']
   |    |    |    | child_window(title="Модули (0)", control_type="Text")
   |
   | ListView - ''    (L448, T118, R1920, B990)
   | ['ListView', 'О программе...ListView', 'Модули (0)ListView', 'ListView0', 'ListView1', 'О программе...ListView0', 'О программе...ListView1']
   | child_window(auto_id="tagsListView", control_type="DataGrid")
   |    |
   |    | Header - ''    (L453, T120, R1915, B145)
   |    | ['О программе...Header', 'Header', 'О программе...Header0', 'О программе...Header1', 'Header0', 'Header1']
   |    |    |
   |    |    | HeaderItem - ''    (L453, T120, R458, B145)
   |    |    | ['О программе...HeaderItem', 'HeaderItem', 'HeaderItem0', 'HeaderItem1']
   |    |    |    |
   |    |    |    | Static - ''    (L0, T0, R0, B0)
   |    |    |    | ['Static11']
   |    |    |    |
   |    |    |    | Thumb - ''    (L447, T120, R469, B145)
   |    |    |    | ['Thumb3', 'О программе...Thumb2']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Имя параметра'    (L458, T120, R570, B145)
   |    |    | ['Имя параметраHeaderItem', 'HeaderItem2', 'Имя параметра', 'Имя параметра0', 'Имя параметра1', 'Имя параметраHeaderItem0', 'Имя параметраHeaderItem1']
   |    |    | child_window(title="Имя параметра", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Имя параметра'    (L460, T122, R568, B142)
   |    |    |    | ['Static12', 'Имя параметра2', 'Имя параметраStatic', 'Имя параметраStatic0', 'Имя параметраStatic1']
   |    |    |    | child_window(title="Имя параметра", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L559, T120, R581, B145)
   |    |    |    | ['Thumb4', 'О программе...Thumb3']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Значение'    (L570, T120, R641, B145)
   |    |    | ['Значение', 'ЗначениеHeaderItem', 'HeaderItem3', 'Значение0', 'Значение1', 'ЗначениеHeaderItem0', 'ЗначениеHeaderItem1']
   |    |    | child_window(title="Значение", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Значение'    (L573, T122, R638, B142)
   |    |    |    | ['Static13', 'Значение2', 'ЗначениеStatic', 'ЗначениеStatic0', 'ЗначениеStatic1']
   |    |    |    | child_window(title="Значение", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L630, T120, R652, B145)
   |    |    |    | ['Thumb5', 'О программе...Thumb4']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Тип'    (L641, T120, R671, B145)
   |    |    | ['Тип', 'HeaderItem4', 'ТипHeaderItem', 'Тип0', 'Тип1']
   |    |    | child_window(title="Тип", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Тип'    (L643, T122, R669, B142)
   |    |    |    | ['Static14', 'Тип2', 'ТипStatic']
   |    |    |    | child_window(title="Тип", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L660, T120, R682, B145)
   |    |    |    | ['Thumb6', 'О программе...Thumb5']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Имя тега'    (L671, T120, R737, B145)
   |    |    | ['Имя тега', 'HeaderItem5', 'Имя тегаHeaderItem', 'Имя тега0', 'Имя тега1', 'Имя тегаHeaderItem0', 'Имя тегаHeaderItem1']
   |    |    | child_window(title="Имя тега", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Имя тега'    (L674, T122, R734, B142)
   |    |    |    | ['Static15', 'Имя тега2', 'Имя тегаStatic', 'Имя тегаStatic0', 'Имя тегаStatic1']
   |    |    |    | child_window(title="Имя тега", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L726, T120, R748, B145)
   |    |    |    | ['Thumb7', 'О программе...Thumb6']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |
   | TabControl - ''    (L0, T0, R0, B0)
   | ['TabControl']
   | child_window(auto_id="modulesInfoTabControl", control_type="Tab")
   |
   | Static - ''    (L448, T118, R1920, B130)
   | ['Static16', 'О программе...Static2']
   |
   | ListView - ''    (L448, T130, R1920, B930)
   | ['ListView2', 'О программе...ListView2']
   | child_window(auto_id="modulesTagsListView", control_type="DataGrid")
   |    |
   |    | Header - ''    (L453, T133, R1915, B158)
   |    | ['О программе...Header2', 'Header2']
   |    |    |
   |    |    | HeaderItem - 'Имя параметра'    (L453, T133, R565, B158)
   |    |    | ['Имя параметраHeaderItem2', 'HeaderItem6', 'Имя параметра3']
   |    |    | child_window(title="Имя параметра", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Имя параметра'    (L455, T135, R563, B155)
   |    |    |    | ['Static17', 'Имя параметра4', 'Имя параметраStatic2']
   |    |    |    | child_window(title="Имя параметра", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L554, T133, R576, B158)
   |    |    |    | ['Thumb8', 'О программе...Thumb7']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Значение'    (L565, T133, R636, B158)
   |    |    | ['Значение3', 'ЗначениеHeaderItem2', 'HeaderItem7']
   |    |    | child_window(title="Значение", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Значение'    (L568, T135, R633, B155)
   |    |    |    | ['Static18', 'Значение4', 'ЗначениеStatic2']
   |    |    |    | child_window(title="Значение", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L625, T133, R647, B158)
   |    |    |    | ['Thumb9', 'О программе...Thumb8']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Имя тега'    (L636, T133, R702, B158)
   |    |    | ['Имя тега3', 'HeaderItem8', 'Имя тегаHeaderItem2']
   |    |    | child_window(title="Имя тега", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Имя тега'    (L638, T135, R699, B155)
   |    |    |    | ['Static19', 'Имя тега4', 'Имя тегаStatic2']
   |    |    |    | child_window(title="Имя тега", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L691, T133, R713, B158)
   |    |    |    | ['Thumb10', 'О программе...Thumb9']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |    |    |
   |    |    | HeaderItem - 'Описание'    (L702, T133, R775, B158)
   |    |    | ['Описание', 'ОписаниеHeaderItem', 'HeaderItem9', 'Описание0', 'Описание1']
   |    |    | child_window(title="Описание", control_type="HeaderItem")
   |    |    |    |
   |    |    |    | Static - 'Описание'    (L704, T135, R773, B155)
   |    |    |    | ['Описание2', 'Static20', 'ОписаниеStatic']
   |    |    |    | child_window(title="Описание", control_type="Text")
   |    |    |    |
   |    |    |    | Thumb - ''    (L764, T133, R786, B158)
   |    |    |    | ['Thumb11', 'О программе...Thumb10']
   |    |    |    | child_window(auto_id="PART_HeaderGripper", control_type="Thumb")
   |
   | Button - 'Обновить'    (L454, T944, R767, B976)
   | ['ОбновитьButton', 'Обновить', 'Button19', 'Обновить0', 'Обновить1']
   | child_window(title="Обновить", control_type="Button")
   |    |
   |    | Static - 'Обновить'    (L576, T949, R644, B969)
   |    | ['Static21', 'ОбновитьStatic', 'Обновить2']
   |    | child_window(title="Обновить", control_type="Text")
   |
   | GroupBox - 'Автообновление'    (L773, T930, R949, B990)
   | ['АвтообновлениеGroupBox', 'Автообновление', 'GroupBox', 'Автообновление0', 'Автообновление1']
   | child_window(title="Автообновление", control_type="Group")
   |    |
   |    | CheckBox - 'Автообновление'    (L784, T931, R926, B950)
   |    | ['Автообновление2', 'CheckBox', 'АвтообновлениеCheckBox']
   |    | child_window(title="Автообновление", control_type="CheckBox")
   |    |    |
   |    |    | Static - 'Автообновление'    (L809, T930, R926, B950)
   |    |    | ['Static22', 'АвтообновлениеStatic', 'Автообновление3']
   |    |    | child_window(title="Автообновление", control_type="Text")
   |    |
   |    | Static - 'Период, сек.'    (L780, T950, R879, B983)
   |    | ['Static23', 'Период, сек.Static', 'Период, сек.', 'Период, сек.Static0', 'Период, сек.Static1', 'Период, сек.0', 'Период, сек.1']
   |    | child_window(title="Период, сек.", control_type="Text")
   |    |    |
   |    |    | Static - 'Период, сек.'    (L787, T956, R873, B976)
   |    |    | ['Static24', 'Период, сек.Static2', 'Период, сек.2']
   |    |    | child_window(title="Период, сек.", control_type="Text")
   |    |
   |    | Edit - '1'    (L881, T953, R939, B980)
   |    | ['Edit']
   |    | child_window(title="1", auto_id="moduleUpdatePeriodTextBox", control_type="Edit")
   |    |    |
   |    |    | ScrollBar - ''    (L0, T0, R0, B0)
   |    |    | ['ScrollBar', 'ScrollBar0', 'ScrollBar1']
   |    |    | child_window(auto_id="VerticalScrollBar", control_type="ScrollBar")
   |    |    |
   |    |    | ScrollBar - ''    (L0, T0, R0, B0)
   |    |    | ['ScrollBar2']
   |    |    | child_window(auto_id="HorizontalScrollBar", control_type="ScrollBar")
   |
   | StatusBar - ''    (L0, T990, R1920, B1030)
   | ['Опрос остановлен.StatusBar', 'StatusBar']
   | child_window(auto_id="PlcStatusBar", control_type="StatusBar")
   |    |
   |    | Static - 'Опрос остановлен.'    (L4, T994, R147, B1026)
   |    | ['Static25', 'Опрос остановлен.Static', 'Опрос остановлен.', 'Опрос остановлен.Static0', 'Опрос остановлен.Static1']
   |    | child_window(title="Опрос остановлен.", auto_id="PollStopped", control_type="Text")
   |    |
   |    | Static - ''    (L155, T994, R167, B1026)
   |    | ['Static26', 'Опрос остановлен.Static2']





How found:	Mouse move (107,91)
	hwnd=0x00060534 64bit class="HwndWrapper[AbakConfigurator.exe;;56604fbd-6eab-402b-9554-da4b827d2c84]" style=0x17CF0000 ex=0x401ChildId:	0
Interfaces:	IEnumVARIANT IOleWindow
Impl:	Remote native IAccessible (UIA-to-MSAA bridge)
Name:	""
Value:	[Error: hr=0x80020003 - Член группы не найден.]
Role:	кнопка (0x2B)
State:	фокусируемое (0x100000)
Location:	{l:60, t:66, w:48, h:48}
Selection:	[Error: calling getter for this property: hr=0x80020003 - Член группы не найден.]
Description:	[Error: hr=0x80020003 - Член группы не найден.]
Kbshortcut:	""
DefAction:	"Нажать"
Help:	"Подключение через Ethernet"
HelpTopic:	""
ChildCount:	1
Window:	0x60534
FirstChild:	[null]
LastChild:	[null]
Next:	[null]
Previous:	[null]
Left:	[null]
Up:	[null]
Right:	[null]
Down:	[null]
ControlType:	50000
LocalizedControlType:	"кнопка"
Name:	""
AcceleratorKey:	""
AccessKey:	""
HasKeyboardFocus:	false
IsKeyboardFocusable:	true
IsEnabled:	true
AutomationId:	""
ClassName:	"Button"
HelpText:	"Подключение через Ethernet"
IsControlElement:	true
IsContentElement:	true
IsPassword:	false
ItemType:	""
IsOffscreen:	false
Orientation:	0
FrameworkId:	"WPF"
IsRequiredForForm:	false
ItemStatus:	""
InvokePattern:	true
Other Props:	Object has no additional properties
Children:	"" : графика : обычный
Ancestors:	"" : панель инструментов : фокусируемое
	"Конфигуратор АБАК ПЛК" : окно : с фокусом ввода,фокусируемое
	"Конфигуратор АБАК ПЛК" : окно : с фокусом ввода,изменяемого размера,перемещаемое,фокусируемое
	"Рабочий стол 1" : клиент : фокусируемое
	"Рабочий стол 1" : окно : фокусируемое
	[ No Parent ]



toolbar = window.child_window(control_type="ToolBar")
buttons = toolbar.descendants(control_type="Button")

for btn in buttons:
    if btn.is_enabled():  # Проверяем, активна ли кнопка
        btn.click_input()
        break

app_name = "Конфигуратор АБАК ПЛК"
app = Application(backend='win32').connect(title = app_name)
main_window = app.window(title = app_name)
main_window.print_control_identifiers()
HwndWrapper[AbakConfigurator.exe;;98fc74ae-19c5-4dc7-ba7f-c292adab86ea] - 'Конфигуратор АБАК ПЛК'    (L-9, T-9, R1929, B1039)
['Конфигуратор АБАК ПЛКHwndWrapper[AbakConfigurator.exe;;98fc74ae-19c5-4dc7-ba7f-c292adab86ea]', 'Конфигуратор АБАК ПЛК', 'HwndWrapper[AbakConfigurator.exe;;98fc74ae-19c5-4dc7-ba7f-c292adab86ea]']
child_window(title="Конфигуратор АБАК ПЛК", class_name="HwndWrapper[AbakConfigurator.exe;;98fc74ae-19c5-4dc7-ba7f-c292adab86ea]")


from pywinauto import Application

app = Application(backend="uia").connect(title="Ваше приложение")
window = app.window(title="Ваше приложение")

# Получаем координаты кнопки
button = window.child_window(title="OK", control_type="Button")
rect = button.rectangle()  # (left, top, right, bottom)
center_x = (rect.left + rect.right) // 2
center_y = (rect.top + rect.bottom) // 2

# Наведение курсора
import pyautogui
pyautogui.moveTo(center_x, center_y)







from collections import defaultdict

def find_all_control_types(app_title, output_file):
    """
    Находит все существующие control_type в окне приложения и сохраняет в файл
    
    :param app_title: Заголовок окна приложения
    :param output_file: Путь к выходному файлу
    """
    try:
        # Подключаемся к приложению (пробуем оба бэкенда)
        for backend in ['uia', 'win32']:
            try:
                app = Application(backend=backend).connect(title=app_title)
                break
            except:
                continue
        else:
            raise Exception(f"Не удалось подключиться к приложению '{app_title}'")

        window = app.window(title=app_title)
        
        # Получаем все элементы
        all_elements = window.descendants()
        
        # Собираем статистику по типам элементов
        type_stats = defaultdict(list)
        
        for elem in all_elements:
            try:
                ctrl_type = elem.element_info.control_type
                type_stats[ctrl_type].append(elem)
            except:
                continue
        
        # Сохраняем результаты
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(f"Все control_type в окне '{app_title}':\n")
            f.write(f"Всего найдено типов: {len(type_stats)}\n")
            f.write(f"Всего элементов: {len(all_elements)}\n\n")
            
            for i, (ctrl_type, elements) in enumerate(type_stats.items(), 1):
                f.write(f"{i}. {ctrl_type} (найдено: {len(elements)})\n")
                
                # Примеры элементов для каждого типа
                for j, elem in enumerate(elements[:3], 1):  # Выводим первые 3 элемента каждого типа
                    try:
                        name = elem.window_text() or "N/A"
                    except:
                        name = "N/A"
                    
                    f.write(f"   Пример {j}: {name}")
                    try:
                        f.write(f" | AutomationId: {elem.automation_id()}")
                    except:
                        pass
                    try:
                        f.write(f" | Координаты: {elem.rectangle()}\n")
                    except:
                        f.write("\n")
                
                if len(elements) > 3:
                    f.write(f"   ... и еще {len(elements)-3} элементов\n")
                f.write("\n")
        
        print(f"Результаты сохранены в: {output_file}")
        return True

    except Exception as e:
        print(f"Ошибка: {str(e)}")
        return False

# Пример использования
if __name__ == "__main__":
    # Настройки
    APP_TITLE = "Конфигуратор АБАК ПЛК"  # Замените на ваш заголовок окна
    OUTPUT_FILE = "all_control_types.txt"
    
    # Запуск поиска
    success = find_all_control_types(APP_TITLE, OUTPUT_FILE)
    
    if success:
        print(f"\nОткройте файл {OUTPUT_FILE} для просмотра всех типов элементов")
        print("Формат файла:")
        print("1. Button (найдено: 5)")
        print("   Пример 1: OK | AutomationId: btnOK | Координаты: (100, 200, 150, 220)")
        print("   Пример 2: Cancel | AutomationId: btnCancel | Координаты: (160, 200, 210, 220)")
        print("   ... и еще 3 элементов\n")
    else:
        print("\nНе удалось выполнить поиск элементов")



# Найти кнопку "OK" в диалоговом окне
ok_button = win32gui.FindWindowEx(hwnd, None, "Button", "OK")

# Получить все дочерние окна
def get_child_windows(parent):
    children = []
    def callback(hwnd, param):
        children.append(hwnd)
        return True
    win32gui.EnumChildWindows(parent, callback, None)
    return children





import win32gui
import win32con
import win32api
import time

def find_ok_button(parent_hwnd=None):
    """Находит кнопку OK в диалоговом окне"""
    # Если не указано родительское окно, ищем среди всех окон
    if parent_hwnd is None:
        parent_hwnd = 0
    
    # Ищем кнопку по классу "Button" и тексту "OK"
    ok_button = win32gui.FindWindowEx(parent_hwnd, None, "Button", "OK")
    
    # Альтернативный вариант - поиск по ID (1 обычно для OK)
    if not ok_button and parent_hwnd:
        ok_button = win32gui.GetDlgItem(parent_hwnd, 1)
    
    return ok_button

def get_child_windows(parent_hwnd):
    """Получает все дочерние окна"""
    children = []
    
    def callback(hwnd, param):
        children.append(hwnd)
        return True
    
    win32gui.EnumChildWindows(parent_hwnd, callback, None)
    return children

def click_button(hwnd):
    """Имитирует клик по кнопке"""
    # Получаем координаты кнопки
    rect = win32gui.GetWindowRect(hwnd)
    x = (rect[0] + rect[2]) // 2
    y = (rect[1] + rect[3]) // 2
    
    # Имитируем клик мыши
    win32api.SetCursorPos((x, y))
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, x, y, 0, 0)
    time.sleep(0.1)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, x, y, 0, 0)

def main():
    # 1. Находим главное окно (пример для Блокнота)
    main_hwnd = win32gui.FindWindow("Notepad", None)
    if not main_hwnd:
        print("Главное окно не найдено!")
        return
    
    print(f"Найдено главное окно: hwnd={main_hwnd}")
    
    # 2. Получаем все дочерние окна
    children = get_child_windows(main_hwnd)
    print(f"Найдено {len(children)} дочерних окон")
    
    # 3. Ищем кнопку OK
    ok_button = find_ok_button(main_hwnd)
    
    if not ok_button:
        # Проверяем среди всех окон
        def find_ok_callback(hwnd, extra):
            if win32gui.GetWindowText(hwnd) == "OK":
                extra.append(hwnd)
            return True
        
        ok_buttons = []
        win32gui.EnumWindows(find_ok_callback, ok_buttons)
        if ok_buttons:
            ok_button = ok_buttons[0]
    
    if ok_button:
        print(f"Найдена кнопка OK: hwnd={ok_button}")
        
        # 4. Кликаем по кнопке
        print("Пытаемся нажать кнопку...")
        click_button(ok_button)
        
        # Альтернативный способ через сообщения
        win32gui.SendMessage(ok_button, win32con.WM_LBUTTONDOWN, 0, 0)
        time.sleep(0.1)
        win32gui.SendMessage(ok_button, win32con.WM_LBUTTONUP, 0, 0)
        
        print("Кнопка OK нажата!")
    else:
        print("Кнопка OK не найдена")

if __name__ == "__main__":
    main()



























from pywinauto import Application
from pywinauto.controls.uia_controls import ButtonWrapper

app = Application(backend="uia").connect(title="Ваше приложение")
window = app.window(title="Ваше приложение")

def is_element_visible(element):
    try:
        # Получаем координаты элемента и родительского окна
        elem_rect = element.rectangle()
        window_rect = window.rectangle()
        
        # Проверяем, полностью ли элемент в видимой области
        return (elem_rect.top >= window_rect.top and
                elem_rect.bottom <= window_rect.bottom and
                elem_rect.left >= window_rect.left and
                elem_rect.right <= window_rect.right)
    except:
        return False

button = window.child_window(title="Нужная кнопка", control_type="Button")
if not is_element_visible(button):
    print("Требуется прокрутка!")






def get_scroll_direction(element):
    elem_rect = element.rectangle()
    window_rect = window.rectangle()
    
    if elem_rect.bottom > window_rect.bottom:
        return "down"
    elif elem_rect.top < window_rect.top:
        return "up"
    elif elem_rect.right > window_rect.right:
        return "right"
    elif elem_rect.left < window_rect.left:
        return "left"
    return None

direction = get_scroll_direction(button)
if direction:
    print(f"Требуется прокрутка в направлении: {direction}")












def scroll_to_element(element):
    scrollbar = window.child_window(control_type="ScrollBar")
    
    if not scrollbar.exists():
        print("ScrollBar не найден!")
        return False
    
    scroll = scrollbar.iface_scroll
    direction = get_scroll_direction(element)
    
    while direction and not is_element_visible(element):
        if direction == "down":
            scroll.Scroll(ScrollAmount.LargeIncrement)
        elif direction == "up":
            scroll.Scroll(ScrollAmount.LargeDecrement)
        
        # Обновляем направление после прокрутки
        direction = get_scroll_direction(element)
        time.sleep(0.3)
    
    return is_element_visible(element)

# Использование
if scroll_to_element(button):
    button.click()
else:
    print("Не удалось прокрутить к элементу")
